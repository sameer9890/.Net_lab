using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Runtime.Serialization.Formatters.Binary;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace Deserialize1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string filepath = @"C:\Users\IET\Desktop\.net\deserial.txt";
            FileStream fs = null;
            if (File.Exists(filepath))
            {
                fs = new FileStream(filepath, FileMode.Open, FileAccess.Read);
            }
            else
            {
                fs = new FileStream(filepath, FileMode.Open, FileAccess.ReadWrite);
            }
            Myclass myclass = new Myclass();
             Myclass myclass1 = new Myclass();
           

            #region serialization
            /*  Console.WriteLine("Enter Employee ID ");
                  myclass.id = Convert.ToInt32(Console.ReadLine());
                   Console.WriteLine("Enter Employee name ");
                   myclass.Name = Console.ReadLine();
              Console.WriteLine("Enter Employee ID ");
              myclass1.id = Convert.ToInt32(Console.ReadLine());
              Console.WriteLine("Enter Employee name ");
              myclass1.Name = Console.ReadLine();

              BinaryFormatter bf = new BinaryFormatter();
               bf.Serialize(fs, myclass);
               bf.Serialize(fs, myclass1);
               fs.Close();*/
            #endregion
            #region Deserialization
            BinaryFormatter bf = new BinaryFormatter();
            myclass = bf.Deserialize(fs) as Myclass;
            myclass1 = bf.Deserialize(fs) as Myclass;
            Console.WriteLine(myclass.GetDetails());
            Console.WriteLine(myclass1.GetDetails());
            Console.WriteLine("done");
            Console.ReadLine(); 
            #endregion

        }
    }
    [Serializable]
    public class Myclass
    {
        private int _id;
        private string _Name;

        public string Name
        {
            get { return _Name; }
            set { _Name = value; }
        }


        public int id
        {
            get { return _id; }
            set { _id = value; }
        }
        public string GetDetails()
        {
            return string.Format("Id ={0}, Name ={1}", _id, _Name);
        }
    }
}

